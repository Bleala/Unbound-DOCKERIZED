name: Container Build Check 🐳✅
run-name: Container Build Check 🐳✅

on:
  push:
    branches:
      - main
  pull_request_target:
    branches: 
      - main
      - dev
  workflow_dispatch:
    inputs:
      source:
        description: 'Specify the branch/tag to build (default: main)'
        required: true
        default: 'main'
        type: string 

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  BUILDCACHE_NAME: ${{ vars.BUILDCACHE_NAME }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  REGISTRY_GITHUB: ${{ vars.REGISTRY_GITHUB }}
  USERNAME_GITHUB: ${{ vars.USERNAME_GITHUB }}

jobs:
  lint-dockerfile:
    name: Lint Dockerfile 🐳📄🔍
    uses: Bleala/Reusable-Workflows/.github/workflows/reusable-dockerfile-linter.yaml@main
    with:
      dockerfile: ./docker/Dockerfile
      ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.source || github.ref }}
    permissions:
      # for actions/checkout to fetch code
      contents: read

  lint-shell-scripts:
    name: Lint Shell Scripts 📜🔍
    uses: Bleala/Reusable-Workflows/.github/workflows/reusable-shell-scripts-linter.yaml@main
    with:
      exclude-paths: "LICENSE,docker/Dockerfile"
      ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.source || github.ref }}
    permissions:
      # for actions/checkout to fetch code
      contents: read

  build-test-container:
    name: Build Test Container 🛠️ ✅ 🐳
    needs:
      - lint-dockerfile
      - lint-shell-scripts
    uses: Bleala/Reusable-Workflows/.github/workflows/reusable-build-test-container.yaml@main
    with:
      buildcache_name: ${{ vars.BUILDCACHE_NAME }}
      image_name: ${{ vars.IMAGE_NAME }}
      image_tag: ci-container-build
      platforms: linux/amd64,linux/arm64,linux/arm/v7
      push: true
      ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.source || github.ref }}
      registry: ${{ vars.REGISTRY_GITHUB }}
      username: ${{ vars.USERNAME_GITHUB }}
    permissions:
      # for actions/checkout to fetch code
      contents: read
      # for docker/build-push-action to push the Docker image to GitHub Container Registry
      packages: write

  trivy-scan-and-upload:
    name: Scan Image For Vulnerabilities 🛡️🔍
    needs:
      - build-test-container
    uses: Bleala/Reusable-Workflows/.github/workflows/reusable-trivy-scan-and-upload.yaml@main
    with:
      image_name: ${{ vars.IMAGE_NAME }}
      image_tag: ci-container-build
      registry: ${{ vars.REGISTRY_GITHUB }}
      username: ${{ vars.USERNAME_GITHUB }}
    permissions:
      # for actions/checkout to fetch code
      contents: read
      # for github/codeql-action/upload-sarif to upload SARIF results
      security-events: write
      # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      actions: read

  Container-Build-Check:
    name: Container Build Check 🐳✅
    needs:
      - trivy-scan-and-upload
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/controlling-permissions-for-github_token
    permissions:
      # for actions/checkout to fetch code
      contents: read
      # for github/codeql-action/upload-sarif to upload SARIF results
      security-events: write
      # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      actions: read
      # for docker/build-push-action to push the Docker image to GitHub Container Registry
      packages: write
    steps:
      # https://github.com/marketplace/actions/ghcr-io-cleanup-action
      - name: GHCR Clean Up 'ci-container-build' Image Tag 🧹🏷️
        id: ghcr-clean-up-ci-container-build
        uses: dataaxiom/ghcr-cleanup-action@cd0cdb900b5dbf3a6f2cc869f0dbb0b8211f50c4 # v1.0.16
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ env.USERNAME_GITHUB }}
          packages: ${{ env.IMAGE_NAME }}
          delete-tags: ci-container-build
          delete-untagged: true

      # https://github.com/marketplace/actions/ghcr-io-cleanup-action
      - name: GHCR Clean Up 'buildcache' Image Tag 🧹🏷️
        id: ghcr-clean-up-buildcache
        uses: dataaxiom/ghcr-cleanup-action@cd0cdb900b5dbf3a6f2cc869f0dbb0b8211f50c4 # v1.0.16
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ env.USERNAME_GITHUB }}
          packages: ${{ env.BUILDCACHE_NAME }}
          exclude-tags: buildcache
          keep-n-untagged: 20
